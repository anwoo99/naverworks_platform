##############################################
############# Commit Message 구조 #############
##############################################
#
#  Author : 작성자 이름
#
#  Type(타입) : Title(제목)
#
#  Body(본문, 생략 가능)
#
#  Resolves : #issue_number(참고 이슈, 생략 가능)
#
#  See also : #issue_number(참고 이슈, 생략 가능)
#
##############################################
########### Commit Message 필드 설명 ###########
##############################################
#
# [Type(타입)]
#  1) FEAT        : 새로운 기능의 추가
#  2) FIX         : 버그 수정
#  3) DOCS        : 문서 수정
#  4) STYLE       : 스타일 관련 기능(코드 포맷팅, 세미콜론 누락, 코드 자체의 변경이 없는 경우)
#  5) REFACTOR : 코드 리펙토링
#  6) TEST        : 테스크 토드, 리펙토링 테스트 코드 추가
#  7) CHORE       : 빌드 업무 수정, 패키지 매니저 수정
#
##############################################
############# Commit Message 규칙 #############
##############################################
#
#  1) 제목과 본문을 빈 행으로 구분한다
#  2) 제목을 50글자 내로 제한
#  3) 제목 첫 글자는 대문자로 작성
#  4) 제목 끝에 마침표 넣지 않기
#  5) 제목은 명령문으로 사용하며 과거형을 사용하지 않는다
#  6) 본문의 각 행은 72글자로 제한
#  7) 어떻게(How?) 보다는 무엇(What?)과 왜(Why?)를 설명한다
#
##############################################
##############################################


############### Commit Message ###############

 Author:

 Type:

 Body:

 Resolves:

#############################################
